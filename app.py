import streamlit as st
from config import Config
from audio_utils.generator import AudioGenerator
from audio_utils.merger import AudioMerger
from llm.advisor import LLMAdvisor
import json

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
cfg = Config()
advisor = LLMAdvisor(cfg)
generator = AudioGenerator(cfg)
merger = AudioMerger(cfg)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∂–∏–º–æ–≤
with open(cfg.MODES_PATH, 'r') as f:
    MODES = json.load(f)

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("üéµ Word2Waves")
mode = st.selectbox("Select mode", list(MODES.keys()))
tips = advisor.get_tips(mode)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–ø—Ç
use_custom_prompt = st.checkbox("Enter your own prompt")
if use_custom_prompt:
    selected = st.text_area("Write your custom prompt:")
else:
    selected = st.radio("Choose prompt", tips)

if st.button("Generate"):
    cfg.clean_temp_files()

    with st.spinner("Creating high quality audio..."):
        try:
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤
            segments = [generator.generate(selected, i) for i in range(cfg.AUDIO_SEGMENTS)]

            # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
            final = merger.merge(segments)

            st.success("High quality audio generated!")
            st.audio(str(final))

            # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            with open(final, 'rb') as f:
                st.download_button(
                    "Download WAV",
                    data=f,
                    file_name="composition.wav",
                    mime="audio/wav"
                )

        except Exception as e:
            st.error(f"Generation error: {str(e)}")
